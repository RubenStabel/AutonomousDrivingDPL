 #{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "perc_net_version_3_NeSy_danger_pedestrian", "module": "AD_V3_NeSy_2_net_danger_pedestrian(\n  (image_features): Sequential(\n    (0): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): ReLU()\n    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): ReLU()\n    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (6): Flatten(start_dim=0, end_dim=2)\n    (7): Linear(in_features=2704, out_features=800, bias=True)\n    (8): ReLU()\n    (9): Linear(in_features=800, out_features=120, bias=True)\n    (10): ReLU()\n    (11): Linear(in_features=120, out_features=16, bias=True)\n    (12): ReLU()\n  )\n  (numeric_features): Sequential(\n    (0): Linear(in_features=1, out_features=9, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=9, out_features=9, bias=True)\n    (3): ReLU()\n  )\n  (combined_features): Sequential(\n    (0): Linear(in_features=25, out_features=16, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=16, out_features=4, bias=True)\n    (3): Softmax(dim=-1)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "perc_net_version_3_NeSy_speed_zone", "module": "AD_V3_NeSy_2_net_speed_zone(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "perc_net_version_3_NeSy_traffic_light", "module": "AD_V3_NeSy_2_net_traffic_light(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=2704, out_features=800, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=800, out_features=80, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=80, out_features=3, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": "nn(perc_net_version_3_NeSy_danger_pedestrian,[Img, Speed],X,[0, 1, 2, 3])::cell_danger_pedestrian(Img,Speed,X).\nnn(perc_net_version_3_NeSy_speed_zone,[MNIST],SZ,[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0])::cell_speed_zone(MNIST,SZ).\nnn(perc_net_version_3_NeSy_traffic_light,[Img],X,[green, orange, red])::cell_traffic_light(Img,X).\nped_brake(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=3.\nped_idle(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=2.\nped_follow(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=1.\nped_acc(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=0.\nspeed_zone_brake(MNIST,Speed) :- cell_speed_zone(MNIST,SZ), Speed>SZ.\nspeed_zone_follow(MNIST,Speed) :- cell_speed_zone(MNIST,SZ), Sl is SZ-0.11, Speed=<SZ, Speed>Sl.\nspeed_zone_accelerate(MNIST,Speed) :- cell_speed_zone(MNIST,SZ), Sl is SZ-0.11, Speed=<Sl.\nbrake_dist(Y,Speed) :- Acc=0.1, Frames_brake=Speed/(2*Acc), Y is -(2*Acc)*Frames_brake**2/2+Speed*Frames_brake.\nidle_dist(Y,Speed) :- Acc=0.1, Frames_idle=Speed/(Acc/2), Y is -(Acc/2)*Frames_idle**2/2+Speed*Frames_idle.\ntraffic_light_brake(Img,MNIST,Speed,Tl_y,P_y) :- \\+Tl_y=-1, Margin=15, Yr is P_y-Tl_y, Yr>=0, brake_dist(Yb,Speed), Yb_margin is Yb+Margin, Yr<Yb_margin, Mb is Margin-1, (Speed>0.2; Yr<Mb), cell_traffic_light(Img,C), (C=red; C=orange).\ntraffic_light_idle(Img,MNIST,Speed,Tl_y,P_y) :- \\+Tl_y=-1, Margin=15, Yr is P_y-Tl_y, Yr>=0, Yr<300, (brake_dist(Yb,Speed), Yb_margin is Yb+Margin, Yr<Yb_margin, Mb is Margin-1, (Speed=<0.2; Yr>=Mb), cell_traffic_light(Img,C), (C=red; C=orange); idle_dist(Yi,Speed), Yi_margin is Yi+Margin, Yr<Yi_margin, cell_traffic_light(Img,C), C=orange).\ntraffic_light_accelerate(Img,MNIST,Speed,Tl_y,P_y) :- Tl_y=-1; Yr is P_y-Tl_y, (Yr<0; Yr<300, brake_dist(Yb,Speed), idle_dist(Yi,Speed), Yr>=Yb, Yr>=Yi; cell_traffic_light(Img,C), C=green).\naction(Img,MNIST,Speed,Tl_y,P_y,1) :- speed_zone_brake(MNIST,Speed); traffic_light_brake(Img,MNIST,Speed,Tl_y,P_y); ped_brake(Img,Speed).\naction(Img,MNIST,Speed,Tl_y,P_y,2) :- (traffic_light_idle(Img,MNIST,Speed,Tl_y,P_y); ped_idle(Img,Speed)), \\+action(Img,MNIST,Speed,Tl_y,P_y,1).\naction(Img,MNIST,Speed,Tl_y,P_y,3) :- (speed_zone_follow(MNIST,Speed); ped_follow(Img,Speed)), \\+action(Img,MNIST,Speed,Tl_y,P_y,1), \\+action(Img,MNIST,Speed,Tl_y,P_y,2).\naction(Img,MNIST,Speed,Tl_y,P_y,0) :- (traffic_light_accelerate(Img,MNIST,Speed,Tl_y,P_y); ped_acc(Img,Speed)), \\+action(Img,MNIST,Speed,Tl_y,P_y,1), \\+action(Img,MNIST,Speed,Tl_y,P_y,2), \\+action(Img,MNIST,Speed,Tl_y,P_y,3).\n"}
#Accuracy 0.6222943722943723
i,time,loss,ground_time,compile_time,eval_time
10,0.4250648021697998,3.4256954791926604,0.007061076164245605,0.0018565773963928223,0.003070080280303955
20,0.8376739025115967,3.8864342045184457,0.005524349212646484,0.0022048115730285644,0.0037041187286376955
30,1.2068278789520264,8.911493222834645,0.005157661437988281,0.002105128765106201,0.00335308313369751
40,1.5293512344360352,5.39722421102515,0.004255890846252441,0.0019748568534851073,0.0029339313507080076
50,1.9117639064788818,5.114078881422756,0.005239164829254151,0.0021671056747436523,0.0032732844352722167
60,2.2337257862091064,5.069773907113131,0.004786491394042969,0.0019695162773132324,0.003139901161193848
70,2.626723051071167,2.7307928613392733,0.005418610572814941,0.002104532718658447,0.0036281466484069822
80,3.01511287689209,2.8774166555523495,0.004761230945587158,0.0021099090576171876,0.003687918186187744
90,3.4110188484191895,6.546194293909525,0.008286678791046142,0.0020798206329345702,0.003320050239562988
100,3.807508945465088,3.2405484383736622,0.0052168011665344235,0.002177000045776367,0.0038221240043640136
110,4.166754961013794,3.044505927001592,0.005655813217163086,0.0021276473999023438,0.0038765549659729006
120,4.492525100708008,4.198527145173102,0.0047490477561950685,0.001997387409210205,0.00316697359085083
130,4.86871600151062,1.7317421066231873,0.0049849867820739744,0.0021224260330200196,0.0035366892814636232
140,5.18273401260376,3.0319182496517896,0.004879987239837647,0.00197216272354126,0.003220236301422119
150,5.555786848068237,1.9822784350719302,0.005396580696105957,0.002165567874908447,0.003724551200866699
160,5.873732089996338,3.9748797293752434,0.004662227630615234,0.0020327091217041014,0.00332338809967041
170,6.210512161254883,0.782438781078838,0.004334545135498047,0.0019571542739868163,0.003243577480316162
180,6.5577778816223145,2.5010247761383697,0.005336940288543701,0.002086496353149414,0.003356742858886719
190,6.887872934341431,2.4578360853716736,0.004444718360900879,0.002045309543609619,0.0033791422843933105
200,7.240936994552612,1.92911689291941,0.005143654346466064,0.0020916581153869627,0.0035964608192443847
210,7.640408992767334,1.5055280099622905,0.00862424373626709,0.0019546151161193848,0.0034633874893188477
220,7.999615907669067,1.4424901060399862,0.004735982418060303,0.0019094705581665038,0.0033349990844726562
230,8.363682985305786,1.00742117957052,0.005181002616882324,0.0019295811653137207,0.0035130977630615234
240,8.68628191947937,2.0451065860688686,0.005465233325958252,0.002032160758972168,0.003656172752380371
250,9.012753963470459,1.6596891317155638,0.004246723651885986,0.0019231677055358888,0.0032009482383728027
260,9.375740051269531,1.9912204377120475,0.00502164363861084,0.0021317720413208006,0.003823292255401611
270,9.712676048278809,1.1257847985305722,0.004206156730651856,0.0020177364349365234,0.0031275510787963866
280,10.029932022094727,0.81723734168927,0.005014777183532715,0.0020098090171813965,0.003501582145690918
290,10.370775938034058,1.6256873432546854,0.004545903205871582,0.0017181992530822753,0.003376317024230957
300,10.72168493270874,1.3489476722694236,0.005061829090118408,0.0018235325813293457,0.003737175464630127
310,11.084950923919678,1.4786442842334508,0.0048103809356689455,0.0018418431282043457,0.00341188907623291
320,11.445281982421875,1.7591399054974317,0.005687224864959717,0.0019809722900390623,0.003680074214935303
330,11.749027013778687,1.4939522922737525,0.004489028453826904,0.0017309308052062989,0.0029957771301269533
340,12.096796989440918,1.1866872213916395,0.005190861225128174,0.001983630657196045,0.003672957420349121
350,12.452897071838379,0.9211935318948236,0.005014944076538086,0.0018287181854248046,0.0036837935447692873
360,12.905119895935059,1.0073783632655249,0.008938026428222657,0.0020880699157714844,0.0033631086349487304
370,13.225178003311157,1.0515903662890196,0.005486702919006348,0.0019553184509277345,0.003380870819091797