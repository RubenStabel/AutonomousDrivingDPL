#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "perc_net_version_3_NeSy_danger_pedestrian", "module": "AD_V3_NeSy_2_net_danger_pedestrian(\n  (image_features): Sequential(\n    (0): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): ReLU()\n    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): ReLU()\n    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (6): Flatten(start_dim=0, end_dim=2)\n    (7): Linear(in_features=2704, out_features=800, bias=True)\n    (8): ReLU()\n    (9): Linear(in_features=800, out_features=120, bias=True)\n    (10): ReLU()\n    (11): Linear(in_features=120, out_features=16, bias=True)\n    (12): ReLU()\n  )\n  (numeric_features): Sequential(\n    (0): Linear(in_features=1, out_features=9, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=9, out_features=9, bias=True)\n    (3): ReLU()\n  )\n  (combined_features): Sequential(\n    (0): Linear(in_features=25, out_features=16, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=16, out_features=4, bias=True)\n    (3): Softmax(dim=-1)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "perc_net_version_3_NeSy_speed_zone", "module": "AD_V3_NeSy_2_net_speed_zone(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=256, out_features=120, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=120, out_features=84, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=84, out_features=10, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "perc_net_version_3_NeSy_traffic_light", "module": "AD_V3_NeSy_2_net_traffic_light(\n  (softmax): Softmax(dim=1)\n  (encoder): Sequential(\n    (0): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (5): ReLU(inplace=True)\n  )\n  (classifier): Sequential(\n    (0): Linear(in_features=2704, out_features=800, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=800, out_features=80, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=80, out_features=3, bias=True)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}, {"name": "perc_net_version_3_NeSy_danger", "module": "AD_V3_NeSy_2_net_danger(\n  (image_features): Sequential(\n    (0): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n    (1): ReLU()\n    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (3): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n    (4): ReLU()\n    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (6): Flatten(start_dim=0, end_dim=2)\n    (7): Linear(in_features=2704, out_features=800, bias=True)\n    (8): ReLU()\n    (9): Linear(in_features=800, out_features=120, bias=True)\n    (10): ReLU()\n    (11): Linear(in_features=120, out_features=16, bias=True)\n    (12): ReLU()\n  )\n  (numeric_features): Sequential(\n    (0): Linear(in_features=3, out_features=9, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=9, out_features=9, bias=True)\n    (3): ReLU()\n  )\n  (combined_features): Sequential(\n    (0): Linear(in_features=25, out_features=16, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=16, out_features=3, bias=True)\n    (3): Softmax(dim=-1)\n  )\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": "nn(perc_net_version_3_NeSy_danger_pedestrian,[Img, Speed],X,[0, 1, 2, 3])::cell_danger_pedestrian(Img,Speed,X).\nnn(perc_net_version_3_NeSy_speed_zone,[MNIST],SZ,[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0])::cell_speed_zone(MNIST,SZ).\nnn(perc_net_version_3_NeSy_traffic_light,[Img],X,[green, orange, red])::cell_traffic_light(Img,X).\nnn(perc_net_version_3_NeSy_danger,[Img, Speed, Yb, Yi],X,[0, 2, 3])::cell_danger(Img,Speed,Yb,Yi,X).\nped_brake(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=3.\nped_idle(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=2.\nped_follow(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=1.\nped_acc(Img,Speed) :- cell_danger_pedestrian(Img,Speed,D), D=0.\nspeed_zone_brake(MNIST,Speed) :- cell_speed_zone(MNIST,SZ), Speed>SZ.\nspeed_zone_follow(MNIST,Speed) :- cell_speed_zone(MNIST,SZ), round(Speed)==SZ.\nspeed_zone_accelerate(MNIST,Speed) :- cell_speed_zone(MNIST,SZ), round(Speed)<SZ.\nbrake_dist(Y,Speed) :- Acc=0.1, Frames_brake=Speed/(2*Acc), Y is -(2*Acc)*Frames_brake**2/2+Speed*Frames_brake.\nidle_dist(Y,Speed) :- Acc=0.1, Frames_idle=Speed/(Acc/2), Y is -(Acc/2)*Frames_idle**2/2+Speed*Frames_idle.\ntraffic_light_brake(Img,MNIST,Speed) :- cell_traffic_light(Img,C), brake_dist(Yb,Speed), idle_dist(Yi,Speed), cell_danger(Img,Speed,Yb,Yi,D), (C=red; C=orange), D=3, Speed>0.2.\ntraffic_light_idle(Img,MNIST,Speed) :- cell_traffic_light(Img,C), brake_dist(Yb,Speed), idle_dist(Yi,Speed), cell_danger(Img,Speed,Yb,Yi,D), (D=3, (C=red; C=orange), Speed=<0.2; D=2, C=orange).\ntraffic_light_accelerate(Img,MNIST,Speed) :- cell_traffic_light(Img,C), brake_dist(Yb,Speed), idle_dist(Yi,Speed), cell_danger(Img,Speed,Yb,Yi,D), (C=green; D=0).\naction(Img,MNIST,Speed,1) :- speed_zone_brake(MNIST,Speed); traffic_light_brake(Img,MNIST,Speed); ped_brake(Img,Speed).\naction(Img,MNIST,Speed,2) :- (traffic_light_idle(Img,MNIST,Speed); ped_idle(Img,Speed)), \\+action(Img,MNIST,Speed,1).\naction(Img,MNIST,Speed,3) :- (speed_zone_follow(MNIST,Speed); ped_follow(Img,Speed)), \\+action(Img,MNIST,Speed,1), \\+action(Img,MNIST,Speed,2).\naction(Img,MNIST,Speed,0) :- (traffic_light_accelerate(Img,MNIST,Speed); ped_acc(Img,Speed)), \\+action(Img,MNIST,Speed,1), \\+action(Img,MNIST,Speed,2), \\+action(Img,MNIST,Speed,3).\n"}
#Accuracy 0.7541666666666667
i,time,loss,ground_time,compile_time,eval_time
10,1.11555814743042,3.6513085511517773,0.008279639482498168,0.0036485254764556884,0.006884711980819702
20,2.2298901081085205,1.5813816393725575,0.00716283917427063,0.004191476106643677,0.008136475086212158
30,3.163762092590332,1.4884211163502186,0.007930952310562133,0.003971397876739502,0.007255548238754272
40,4.140850305557251,1.379444116303239,0.0075650155544281,0.003816807270050049,0.007590436935424804
50,5.072811126708984,1.1437281170753977,0.008262282609939576,0.0035434722900390624,0.007231312990188599
60,6.049062252044678,1.172404266229205,0.009486961364746093,0.004084932804107666,0.007837808132171631
70,6.983725070953369,1.171215016883798,0.007229948043823242,0.004102051258087158,0.0079079270362854
80,7.911814212799072,1.2393850311636925,0.008325922489166259,0.004158914089202881,0.00779188871383667
90,8.789107322692871,1.2856648620984288,0.0071349084377288815,0.0037888407707214354,0.0074236392974853516
100,9.622117042541504,1.114792036265135,0.008849501609802246,0.003751552104949951,0.006987255811691284
110,10.521870136260986,1.057668256800389,0.007596063613891602,0.004497802257537842,0.008179664611816406
120,11.386313199996948,1.1144971789624833,0.0074352860450744625,0.0038809418678283692,0.007753151655197144
130,12.221156120300293,1.2291029392217752,0.007680213451385498,0.003807717561721802,0.0071458518505096436
140,13.070923089981079,0.8163314877256198,0.008255726099014283,0.003720510005950928,0.0075783848762512205
150,13.867374181747437,0.626342912527116,0.008564513921737672,0.0038100779056549072,0.00688716173171997
160,14.70425009727478,1.163639159999002,0.008338791131973267,0.003970545530319214,0.007737952470779419
170,15.553410053253174,0.7864489024039358,0.007196640968322754,0.004323142766952515,0.007492005825042725
180,16.41917109489441,1.0778925667078512,0.008439344167709351,0.004001742601394654,0.007950365543365479
190,17.231743335723877,0.8431367159137153,0.007382237911224365,0.003649967908859253,0.006969618797302246
200,18.033982276916504,0.9431225127540529,0.008955997228622437,0.004159682989120483,0.007207125425338745
210,18.908610105514526,0.8172981072420953,0.00723840594291687,0.004184722900390625,0.00806073546409607
220,19.726311206817627,0.7852317301609218,0.007682579755783081,0.0038499414920806887,0.007171863317489624
230,20.621458292007446,0.9096245476990589,0.00786237120628357,0.003910446166992187,0.007528847455978394
240,21.477362155914307,0.624732189187489,0.008161503076553344,0.003622007369995117,0.007514113187789917
250,22.295579195022583,0.7284670677646318,0.009504079818725586,0.003926283121109009,0.007317692041397095
260,23.149362325668335,0.7982542635174468,0.007211118936538696,0.004011380672454834,0.007689821720123291
270,23.97538113594055,0.8785429938230663,0.007373535633087158,0.004331916570663452,0.007280099391937256
280,24.821837186813354,0.7723835037355457,0.008315163850784301,0.0038295209407806395,0.007678258419036865
290,25.628981351852417,0.804622374076871,0.00737459659576416,0.003833121061325073,0.0069701850414276125
300,26.4674711227417,0.7313144679530523,0.00879356861114502,0.004113000631332397,0.007364386320114135
310,27.338744163513184,0.7841934963782478,0.007398736476898193,0.00405539870262146,0.007865327596664428
320,28.165993213653564,0.7248609161935746,0.00772743821144104,0.003902149200439453,0.007142400741577149
330,28.996220111846924,0.5728651352475026,0.008554047346115113,0.003664588928222656,0.00722082257270813
340,29.823986291885376,0.8370827320133685,0.0084117591381073,0.003850299119949341,0.0070270836353302
350,30.67306900024414,0.620270323778368,0.008243018388748169,0.003888481855392456,0.007556533813476563
360,31.54510998725891,0.336842264526058,0.007313871383666992,0.004034394025802612,0.007494795322418213
370,32.38387417793274,0.8495160415313421,0.008285272121429443,0.0042482554912567135,0.007746982574462891
380,33.174580335617065,0.5368958170887254,0.007464742660522461,0.0038144826889038087,0.007013362646102905
390,33.98054218292236,0.7216966966865584,0.008831000328063965,0.0039522647857666016,0.0070630133152008055
400,34.810938119888306,0.4838414317586285,0.007528853416442871,0.004284214973449707,0.007611149549484253
410,35.682979106903076,0.4582927986884897,0.007454675436019897,0.0038838326930999757,0.007585972547531128
420,36.50480103492737,0.732338978163898,0.0077445685863494875,0.0037922799587249757,0.007165080308914185
430,37.303420305252075,0.30215053694773814,0.008259660005569458,0.003691244125366211,0.007283139228820801
440,38.104979276657104,0.3641205173313212,0.009812122583389283,0.004021191596984863,0.006838059425354004
450,38.94705104827881,0.9482009277788166,0.0069869041442871095,0.0038431644439697265,0.007383137941360474
460,39.77908706665039,0.2783139078150271,0.007194781303405761,0.004498380422592163,0.0074492692947387695
470,40.62482309341431,0.6171173520854154,0.008351469039916992,0.003697007894515991,0.0071469366550445555
480,41.41600012779236,0.4773020945083431,0.00733567476272583,0.003782123327255249,0.00668979287147522